buildscript {
    ext {
        mapstructVersion = '1.4.2.Final'
        springBootVersion = '2.5.7'
        dependencyManagementVersion = '1.0.11.RELEASE'
        jwtVersion = '0.11.2'
        swaggerVersion = '3.0.0'
        kotlinVersion = '1.5.32'
    }

    repositories {
        mavenCentral()
    }
    dependencies {
        dependencies {
            classpath "org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}"
            classpath "io.spring.gradle:dependency-management-plugin:${dependencyManagementVersion}"
            classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:${kotlinVersion}"
            classpath "org.jetbrains.kotlin:kotlin-allopen:${kotlinVersion}"
            classpath "org.jetbrains.kotlin:kotlin-noarg:${kotlinVersion}"
        }
    }
}

subprojects {
    group = 'com.kakao.mobility'
    version = '0.0.1-SNAPSHOT'

    repositories {
        mavenCentral()
    }

    apply plugin: 'java'
    apply plugin: 'org.springframework.boot'
    apply plugin: 'io.spring.dependency-management'
    apply plugin: "kotlin"
    apply plugin: "kotlin-spring"
    apply plugin: "kotlin-jpa"
    apply plugin: "kotlin-noarg"
    apply plugin: "kotlin-allopen"

    sourceCompatibility = '1.8'
    targetCompatibility = '1.8'

    configurations {
        compileOnly {
            extendsFrom annotationProcessor
        }
    }

    allOpen {
        annotation("javax.persistence.Entity")
        annotation("javax.persistence.MappedSuperclass")
        annotation("javax.persistence.Embeddable")
    }

    dependencies {
        // kotlin
        compileOnly("org.jetbrains.kotlin:kotlin-stdlib:${kotlinVersion}")
        compileOnly("org.jetbrains.kotlin:kotlin-stdlib-jdk8:${kotlinVersion}")
        compileOnly("org.jetbrains.kotlin:kotlin-reflect:${kotlinVersion}")
        compileOnly("com.fasterxml.jackson.module:jackson-module-kotlin")
        implementation 'io.github.microutils:kotlin-logging:1.12.5'

        implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
        implementation 'org.springframework.boot:spring-boot-starter-web'
        implementation 'org.springframework.boot:spring-boot-starter-validation'
        implementation 'org.springframework.boot:spring-boot-starter-security'

        compileOnly 'org.projectlombok:lombok:1.18.22'
        annotationProcessor 'org.projectlombok:lombok:1.18.22'

        implementation group: 'io.springfox', name: 'springfox-boot-starter', version: "${swaggerVersion}"
        compileOnly group: 'io.springfox', name: 'springfox-swagger-ui', version: "${swaggerVersion}"
        compileOnly group: 'io.springfox', name: 'springfox-swagger2', version: "${swaggerVersion}"

        runtimeOnly 'mysql:mysql-connector-java'

        implementation group: 'io.jsonwebtoken', name: 'jjwt-api', version: "${jwtVersion}"
        runtimeOnly group: 'io.jsonwebtoken', name: 'jjwt-impl', version: "${jwtVersion}"
        runtimeOnly group: 'io.jsonwebtoken', name: 'jjwt-jackson', version: "${jwtVersion}"

        testImplementation 'org.springframework.boot:spring-boot-starter-test'
        testImplementation 'org.jetbrains.kotlin:kotlin-test'
        testImplementation 'org.jetbrains.kotlin:kotlin-test-junit5'
        testCompileOnly 'org.projectlombok:lombok:1.18.22'
        testAnnotationProcessor 'org.projectlombok:lombok:1.18.22'
    }

    test {
        useJUnitPlatform()
    }
}

project(':coupon-common') {

}

project(':coupon-service-api') {
    dependencies {
        implementation project(':coupon-common')
    }
}

project(':coupon-login-api') {
    dependencies {
        implementation project(':coupon-common')
    }
}
